"文件格式设定为utf-8
set fileencodings=utf-8,cp936
set encoding=utf-8
set termencoding=utf-8
set guifont=Source_Code_pro:h14
call pathogen#infect()
"默认风格
"colorscheme doriath
set background=dark
colorscheme solarized
let g:solarized_termcolors=256
let g:solarized_termtrans=1

set colorcolumn=80

"打开文件类型检测

filetype on

filetype plugin on

"语法高亮
syntax enable

"显示行数
set nu

"版式
set cindent
set smartindent
set tabstop=4 
set shiftwidth=4
set expandtab


"自动缩进
set ai

"智能缩进
set si

"搜索高亮
set hlsearch

"修改后立即生效
autocmd! bufwritepost .vimrc source ~/.vimrc

"php语法检测，现在使用vim syntastic plugin
"map <C-J> :!php -l %<CR>

" 将指定文件的换行符转换成 UNIX 格式,使用jquery插件
if has("autocmd")
    au FileType php,javascript,html,css,python,ruby,vim,vimwiki,go set ff=unix
    au FileType php,javascript,html,css,python,ruby,vim,vimwiki,go set bin noeol
    au FileType go compiler go
    au BufRead,BufNewFile *.log setf httplog
    au BufRead,BufNewFile *.conf setf ini
	au BufNewFile,BufRead *.as setf actionscript
	au BufRead,BufNewFile *.{md,mdown,mkd,mkdn,markdown,mdwn}   set filetype=markdown
	au BufRead,BufNewFile /usr/local/etc/nginx/sites/* set ft=nginx 
    filetype indent on
endif

"neocompletecache
"let g:neocomplcache_enable_at_startup=1
"let g:neocomplcache_disable_auto_complete=0
"let g:neocomplcache_enable_smart_case=1
"let g:SuperTabDefaultCompletionType='<C-X><C-U>'
"let g:acp_enableAtStartup = 0

"保存文件上次位置
autocmd BufReadPost *
            \ if line("'\"") > 1 && line("'\"") <= line("$") |
            \   exe "normal! g`\"" |
            \ endif
"括号自动补全，但与输入法有冲突，暂时不用
"inoremap ( ()<LEFT>
"inoremap [ []<LEFT>
"inoremap { {}<LEFT>
"inoremap ' ''<LEFT>
"inoremap " ""<LEFT>

"lookupfile查找文件插件，设置tags
let g:LookupFile_TagExpr = string('./filenametags')

"注释工具
let g:DoxygenToolkit_authorName="Zhou Ming <zhouming.me@gmail.com>"
let g:DoxygenToolkit_blockHeader="--------------------------------------------------------------------------"
let g:DoxygenToolkit_blockFooter="--------------------------------------------------------------------------"
map <leader>da :DoxAuthor<cr>
map <leader>dx :Dox<cr>
map <leader>db :DoxBlock<cr>

let g:syntastic_check_on_open=1
let g:syntastic_enable_signs=1 
let g:syntastic_auto_loc_list=1

let g:syntastic_phpcs_conf = "--tab-width=4 --standard=PSR2"
let loaded_css_syntax_checker = 1
let g:syntastic_phpcs_disable = 0

if has('mac')
  let g:HAMMER_BROWSER = 'open'
endif

let g:user_emmet_leader_key='<C-Z>'


let g:tagbar_type_go = {
    \ 'ctagstype' : 'go',
    \ 'kinds'     : [
        \ 'p:package',
        \ 'i:imports:1',
        \ 'c:constants',
        \ 'v:variables',
        \ 't:types',
        \ 'n:interfaces',
        \ 'w:fields',
        \ 'e:embedded',
        \ 'm:methods',
        \ 'r:constructor',
        \ 'f:functions'
    \ ],
    \ 'sro' : '.',
    \ 'kind2scope' : {
        \ 't' : 'ctype',
        \ 'n' : 'ntype'
    \ },
    \ 'scope2kind' : {
        \ 'ctype' : 't',
        \ 'ntype' : 'n'
    \ },
    \ 'ctagsbin'  : 'gotags',
    \ 'ctagsargs' : '-sort -silent'
\ }